h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
    margin: unset;
    margin-bottom: property(gap);
}

$headings: 3.00rem 2.25rem 2.00rem 1.50rem 1.25rem 1.00rem;
@each $size in $headings {
    $index: index($headings, $size);
    
    h#{$index}, .heading--#{$index} { 
        font-size: $size; // Fallback
        font-size: clamp(#{$size}, #{$size}, calc(#{$size} * 1.25));
    }
}

a {
    text-decoration: none;
}

p {
    $base: property(gap, false);
    font-size: clamp(#{$base}, -#{$base} + 2.5vw, calc(#{$base} * 1.25));
    overflow-wrap: break-word;
    hyphens: auto;
    margin: unset;

    + p,
    + ul,
    + ol {
        margin-top: property(gap);
    }

    + h1, + .h1,
    + h2, + .h2,
    + h3, + .h3,
    + h4, + .h4,
    + h5, + .h5,
    + h6, + .h6 {
        margin-top: calc(#{property(gap)} * 2);
    }

    a[href] {

        &:not([href=""]):not([href^=\#]) {
            text-decoration: underline;
        }

        @include theme(light) {
            // color: color(blue);
        }
    
        @include theme(dark) {
            // color: color(red);
        }
    }
}

article {

    ul,
    ol,
    picture,
    table,
    figure,
    blockquote,
    iframe,
    img,
    table {
        margin-bottom: property(gap);
    }
}

ul,
ol {
    padding: unset;
    padding-left: property(gap-half);
    list-style: none;

    li {
        position: relative;
        padding-left: property(gap);
        
        ul,
        ol {
            margin-top: property(gap-half);
            margin-bottom: property(gap-half);
        }

        &:before {
            content: "â€¢";
            margin-left: calc(#{property(gap)} * -1);
            margin-right: property(gap-half);
            // color: color(red);
        }

        &:not(:last-of-type) {
            margin-bottom: property(gap-half);
        }
    }
}

ol li {
    counter-increment: ol;

    &:before {
        content: counter(ol) ".";
    }
}